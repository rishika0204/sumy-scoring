import itertools

window_size = 3
covered_cooccurrences = set()

for window_start in range(len(processed_text) - window_size + 1):
    # Generate all unique i,j pairs in this window in one shot:
    window_indices = range(window_start, window_start + window_size)
    for i, j in itertools.combinations(window_indices, 2):
        word_i = processed_text[i]
        word_j = processed_text[j]
        index_of_i = word_index[word_i]
        index_of_j = word_index[word_j]
        dist = abs(j - i)

        # Add (i->j) if not already covered
        if (index_of_i, index_of_j) not in covered_cooccurrences:
            weighted_edge[index_of_i][index_of_j] += 1.0 / dist
            covered_cooccurrences.add((index_of_i, index_of_j))

        # Add (j->i) if you want symmetry:
        if (index_of_j, index_of_i) not in covered_cooccurrences:
            weighted_edge[index_of_j][index_of_i] += 1.0 / dist
            covered_cooccurrences.add((index_of_j, index_of_i))
