from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lsa import LsaSummarizer
from sumy.nlp.stemmers import Stemmer
from sumy.utils import get_stop_words
import numpy as np

# === Input Text ===
text = """Replace this string with the paragraph of text you want to summarize.
It can be multiple sentences long. The script will identify the most important sentences
using Sumy's LSA algorithm and print them along with their importance scores."""
language = "english"
top_n = 2  # number of sentences to include in summary

# Parse the text into a document
parser = PlaintextParser.from_string(text, Tokenizer(language))
document = parser.document

# Initialize LSA Summarizer with optional stemming and stop words
stemmer = Stemmer(language)
summarizer = LsaSummarizer(stemmer)
summarizer.stop_words = get_stop_words(language)

# Generate summary (top N sentences) using Sumy
summary_sentences = summarizer(document, sentences_count=top_n)

# Compute Sumy's internal sentence scores via the LSA components
# 1. Build term-frequency matrix as Sumy does
dictionary = summarizer._create_dictionary(document)
if not dictionary:
    scores = []  # empty document edge case
else:
    matrix = summarizer._create_matrix(document, dictionary)
    matrix = summarizer._compute_term_frequency(matrix)
    # 2. Perform SVD (using numpy.linalg.svd)
    u, sigma, v = np.linalg.svd(matrix, full_matrices=False)
    # 3. Compute ranks using Sumy's formula
    scores = summarizer._compute_ranks(sigma, v)

# Sort sentences by score (descending)
score_index_pairs = sorted(enumerate(scores), key=lambda x: x[1], reverse=True)

# === Output Results ===
print("Summary (Top {} Sentences):".format(top_n))
for sentence in summary_sentences:
    print("-", sentence)  # sentence is a Sentence object; printing yields its text

print("\nAll Sentences Ranked by Importance:")
for idx, score in score_index_pairs:
    # Convert sentence object to string for printing
    sentence_text = str(document.sentences[idx])
    print(f"{score:.4f} - {sentence_text}")
